apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'maven-publish'
sourceSets.main.java.srcDirs = ['src']
jar.archiveName = "GradleJenkinsTest.jar"
jar {
    manifest {
        attributes 'Main-Class': 'com.gradle.jenkins.test.TestProgram'
    }
}
repositories {
    mavenCentral()
}

task onlySpecifiesCodeForConfigurationPhase {
    group 'test'
    description 'Configuration phase task example.'

    println 'I always get printed even though, I am not invoked'
}

task anotherUnrelatedTask {
    doLast{
        println 'I am in the doLast execution phase'
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
	group = 'com.gradle.jenkins.test'
    version = currentVersion
    status = 'Integration'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(file("$rootDir/gradle.properties"))
        }
    }
}
artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = '${artifactory_repoKey}'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = false
            
        }
		defaults {
			// Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            publishPom = true // Publish generated POM files to Artifactory (true by default)
            publishIvy = true // Publish generated Ivy descriptor files to Artifactory (true by default)
		}
    }
    resolve {
        repository {
            repoKey = 'libs-releases'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
    }
}

